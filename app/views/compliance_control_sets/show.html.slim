/ PageHeader
= pageheader 'jeux-de-donnees',
              @compliance_control_set.name,
             'Lorem ipsum dolor sit amet'

  / Below is secondary actions & optional contents (filters, ...)
  .row.mb-sm
    .col-lg-12.text-right
      - @compliance_control_set.action_links.each do |link|
        - if link.is_a?(HTMLElement)
          = link.to_html(class: 'btn btn-primary')
        - else
          = link_to link.href,
              method: link.method,
              data: link.data,
              class: 'btn btn-primary' do
                = link.content

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
            ComplianceControlSet.human_attribute_name(:name) => @compliance_control_set.name

  .container-fluid
    .row
      .col-lg-12
        /= render 'filters'
      .row
        .col-lg-12
          .select_table
            = table_builder_2 @compliance_controls,
                    [ \
                TableBuilderHelper::Column.new( \
                  key: :code, \
                  attribute: 'code' \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :name, \
                  attribute: 'name', \
                  link_to: lambda do |compliance_control| \
                      compliance_control_set_compliance_control_path(@compliance_control_set, compliance_control) \
                    end \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :criticity, \
                  attribute: 'criticity' \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :comment, \
                  attribute: 'comment' \
                ), \
              ],
              sortable: true,
              cls: 'table has-filter has-search'


