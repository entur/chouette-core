- breadcrumb :compliance_control_set, @compliance_control_set
/ PageHeader
= pageheader 'jeux-de-controle',
              t('compliance_control_sets.show.title', name: @compliance_control_set.name),
             'Lorem ipsum dolor sit amet'

  / Below is secondary actions & optional contents (filters, ...)
  .row.mb-sm
    .col-lg-12.text-right
      - @compliance_control_set.action_links.each do |link|
        - if link.is_a?(HTMLElement)
          = link.to_html(class: 'btn btn-primary')
        - else
          = link_to link.href,
              method: link.method,
              data: link.data,
              class: 'btn btn-primary' do
            = link.content

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
            ComplianceControlSet.human_attribute_name(:name) => @compliance_control_set.name,
            I18n.t('activerecord.attributes.compliance_control_set.owner_jdc') => @compliance_control_set.organisation.name

  - if params[:q].present? || @compliance_controls.any? || @direct_compliance_controls
    .row
      .col-lg-12
        = render '/compliance_controls/filters'


      - if @direct_compliance_controls.try(:any?)
        .row
          .col-lg-12
            h2
              = transport_mode_text()
        .row
          .col-lg-12
            .select_table
              = table_builder_2 @direct_compliance_controls,
                      [ \
                  TableBuilderHelper::Column.new( \
                    key: :code, \
                    attribute: 'code' \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :name, \
                    attribute: 'name', \
                    link_to: lambda do |compliance_control| \
                        compliance_control_set_compliance_control_path(@compliance_control_set, compliance_control) \
                      end \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :criticity, \
                    attribute: 'criticity' \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :comment, \
                    attribute: 'comment' \
                  ), \
                ],
                sortable: true,
                cls: 'table has-filter has-search',
                model: ComplianceControl

    - @compliance_controls.each do |block, compliance_controls|

      - if compliance_controls.try(:any?)
        .row
          .col-lg-12
            h2
              = transport_mode_text(block)
              .btn-group
                .btn.dropdown-toggle{ data-toggle="dropdown" }
                  .span.fa.fa-cog
                ul.dropdown-menu
                  li
                    = link_to t('compliance_control_sets.actions.edit'), edit_compliance_control_set_compliance_control_block_path(@compliance_control_set.id, block.id)
                    = link_to t('compliance_control_sets.actions.destroy'), compliance_control_set_compliance_control_block_path(@compliance_control_set.id, block.id), :method => :delete, :data => {:confirm =>  t('compliance_control_sets.actions.destroy_confirm')}
          .row
            .col-lg-12
              .select_table
                = table_builder_2 compliance_controls,
                        [ \
                    TableBuilderHelper::Column.new( \
                      key: :code, \
                      attribute: 'code' \
                    ), \
                    TableBuilderHelper::Column.new( \
                      key: :name, \
                      attribute: 'name', \
                      link_to: lambda do |compliance_control| \
                          compliance_control_set_compliance_control_path(@compliance_control_set, compliance_control) \
                        end \
                    ), \
                    TableBuilderHelper::Column.new( \
                      key: :criticity, \
                      attribute: 'criticity' \
                    ), \
                    TableBuilderHelper::Column.new( \
                      key: :comment, \
                      attribute: 'comment' \
                    ), \
                  ],
                  sortable: true,
                  cls: 'table has-filter has-search',
                  model: ComplianceControl

    .select_toolbox
      ul
        li.st_action.with_text
          = link_to select_type_compliance_control_set_compliance_controls_path(@compliance_control_set.id)
            span.fa.fa-plus
            span
              = t('compliance_control_sets.actions.add_compliance_control')
        li.st_action.with_text
          = link_to new_compliance_control_set_compliance_control_block_path(@compliance_control_set.id)
            span.fa.fa-plus
            span
              = t('compliance_control_sets.actions.add_compliance_control_block')
