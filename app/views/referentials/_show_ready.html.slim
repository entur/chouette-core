- if params[:q].present? or reflines.any?
  .row
    .col-lg-12
      = render 'filters'

- if reflines.any?
  .row
    .col-lg-12
      / ID Codif, nom court, nom de la ligne, r√©seau, mode, transporteur principal, actions = [show, edit_notes]
      = table_builder_2 reflines,
        [ \
          TableBuilderHelper::Column.new( \
            name: t('id_codif'), \
            attribute: Proc.new { |n| n.get_objectid.short_id }, \
            sortable: false \
          ), \
          TableBuilderHelper::Column.new( \
            key: :number, \
            attribute: 'number' \
          ), \
          TableBuilderHelper::Column.new( \
            key: :name, \
            attribute: 'name', \
            link_to: lambda do |line| \
              referential_line_path(referential, line) \
            end \
          ), \
          TableBuilderHelper::Column.new( \
            key: :state, \
            attribute: Proc.new { |n| line_status(n.deactivated?) } \
          ), \
          TableBuilderHelper::Column.new( \
            key: :transport_mode, \
            attribute: Proc.new { |n| n.transport_mode ? t("enumerize.transport_mode.#{n.transport_mode}") : '' }, \
          ), \
          TableBuilderHelper::Column.new( \
            key: 'networks.name', \
            attribute: Proc.new { |n| n.try(:network).try(:name) } \
          ), \
          TableBuilderHelper::Column.new( \
            key: 'companies.name', \
            attribute: Proc.new { |n| n&.company&.name || "-" } \
          ) \
        ],
        cls: 'table has-filter has-search',
        action: :index

      = new_pagination reflines, 'pull-right'

- unless reflines.any?
  .row.mt-xs
    .col-lg-12
      = replacement_msg t('referential_lines.search_no_results')


= referential_overview resource

/ Modal(s)
= modalbox 'purgeModal' do
  = simple_form_for [referential, CleanUp.new] do |clean_up_form|
    .modal-header
      h4.modal-title #{t('simple_form.labels.clean_up.title')}
    .modal-body
      .container-fluid
        .row
          .col-lg-8.col-ld-offset-2.col-md-8.col-md-offset-2.col-sm-8.col-sm-offset-2.col-xs-12
            = clean_up_form.input :date_type, as: :radio_buttons, label: false

          .col-lg-8.col-ld-offset-2.col-md-8.col-md-offset-2.col-sm-8.col-sm-offset-2.col-xs-12
            label.control-label.begin_date = t('titles.clean_up.begin_date')
            label.control-label.end_date.hidden = t('titles.clean_up.end_date')
            = clean_up_form.input :begin_date, as: :date, label: false, wrapper_html: { class: 'date smart_date' }

            = clean_up_form.input :end_date, as: :date, label: t('titles.clean_up.end_date'), wrapper_html: { class: 'date cleanup_end_date_wrapper smart_date', id: "end_date" }

    .modal-footer
      button.btn.btn-link type='button' data-dismiss='modal' #{t('cancel')}
      - unless policy(referential).referential_read_only?
        = clean_up_form.button :submit, t('actions.clean_up') , class: 'btn btn-primary'
