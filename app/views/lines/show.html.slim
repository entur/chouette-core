- breadcrumb :line, @line
- page_header_content_for @line

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t("lines.form.sections.identification"),
          {  t('objectid') => @line.get_objectid.short_id,
             Chouette::Line.tmf(:status) => line_status(@line),
             Chouette::Line.tmf(:name) => @line.name,
             Chouette::Line.tmf(:published_name) => @line.published_name,
             Chouette::Line.tmf(:registration_number) => @line.registration_number,
             Chouette::Line.tmf(:number) => @line.number,
             Chouette::Line.tmf(:transport_mode) => (@line.transport_mode.present? ? t("enumerize.transport_mode.#{@line.transport_mode}") : '-'),
             Chouette::Line.tmf(:transport_submode) => (@line.transport_submode.present? ? t("enumerize.transport_submode.#{@line.transport_submode}") : '-'),
             Chouette::Line.tmf(:objectid) => @line.objectid }
        = definition_list t("lines.form.sections.general"),
          {  Chouette::Line.tmf(:mobility_restricted_suitability) => boolean_icon(@line.mobility_restricted_suitability),
             Chouette::Line.tmf(:flexible_service) => boolean_icon(@line.flexible_service),
             Chouette::Line.tmf(:seasonal) => boolean_icon(@line.seasonal),
             Chouette::Line.tmf(:comment) => @line.comment.presence || '-' }

      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t("lines.form.sections.location"),
          {  Chouette::Line.tmf(:network_id) => (@line.network.nil? ? t('lines.index.unset') : @line.network.name),
             Chouette::Line.tmf(:company_id) => (@line.company.nil? ? t('lines.index.unset') : @line.company.name),
             Chouette::Line.tmf(:secondary_companies) => (@line.secondary_companies.nil? ? t('lines.index.unset') : array_to_html_list(@line.secondary_companies.collect(&:name))) }

        = definition_list t("lines.form.sections.publication_data"),
          {  Chouette::Line.tmf(:color) => color_icon(@line.color),
             Chouette::Line.tmf(:text_color) => color_icon(@line.text_color),
             Chouette::Line.tmf(:url) => (@line.url.present? ? link_to(@line.url, @line.url, target: :blank) : t('lines.index.unset'))}
