/ PageHeader
= pageheader 'map-marker',
             t('lines.index.title'),
             'Lorem ipsum dolor sit amet',
             '',
             ((policy(Chouette::Line).create? && @line_referential.organisations.include?(current_organisation)) ? link_to(t('lines.actions.new'), new_line_referential_line_path(@line_referential), class: 'btn btn-primary') : '')

/ PageContent
.page_content
  .container-fluid
    - if params[:q].present? or @lines.any?
      .row
        .col-lg-12
          = render 'filters'

    - if @lines.any?
      .row
        .col-lg-12
          = table_builder_2 @lines,
            [ \
              TableBuilderHelper::Column.new( \
                name: 'Oid', \
                attribute: Proc.new { |n| n.objectid.local_id }, \
                sortable: false \
              ), \
              TableBuilderHelper::Column.new( \
                key: :number, \
                attribute: 'number', \
              ), \
              TableBuilderHelper::Column.new( \
                key: :name, \
                attribute: 'name', \
              ), \
              TableBuilderHelper::Column.new( \
                key: :deactivated, \
                attribute: Proc.new{|n| n.deactivated? ? t('false') : t('true')}, \
              ), \
              TableBuilderHelper::Column.new( \
                key: 'networks.name', \
                attribute: Proc.new { |n| n.try(:network).try(:name) }, \
              ), \
              TableBuilderHelper::Column.new( \
                key: 'companies.name', \
                attribute: Proc.new { |n| n.try(:company).try(:name) }, \
              ), \
              TableBuilderHelper::Column.new( \
                key: :transport_mode, \
                attribute: Proc.new { |n| n.transport_mode.nil? ? '-' :  t("enumerize.line.transport_mode.#{n.try(:transport_mode)}") }, \
              ), \
              TableBuilderHelper::Column.new( \
                key: :transport_submode, \
                attribute: Proc.new { |n| n.transport_submode.nil? ? '-' :  t("enumerize.line.transport_submode.#{n.try(:transport_submode)}") } \
              ) \
            ], \
            links: [:show],
            cls: 'table has-filter has-search'

          = new_pagination @lines, 'pull-right'

    - unless @lines.any?
      .row.mt-xs
        .col-lg-12
          = replacement_msg t('referential_lines.search_no_results')
