- hide_stop_area_providers ||= false

= search_form_for @q, url: stop_area_referential_stop_areas_path(@stop_area_referential), html: {method: :get}, class: 'form form-filter' do |f|
  .ffg-row
    .input-group.search_bar class=filter_item_class(params[:q], :name_or_objectid_cont)
      = f.search_field :name_or_objectid_or_registration_number_cont,
          placeholder: t('.name_or_objectid'),
          class: 'form-control'
      span.input-group-btn
        button.btn.btn-default#search-btn type='submit'
          span.fa.fa-search

  .ffg-row
    = f.input :zip_code_cont, placeholder: t('.zip_code'), label: Chouette::StopArea.tmf('zip_code'), required: false, wrapper_html: {class: filter_item_class(params[:q], :zip_code_cont)}
    = f.input :city_name_cont, placeholder: t('.city_name'), label: Chouette::StopArea.tmf('city_name'), required: false, wrapper_html: {class: filter_item_class(params[:q], :city_name_cont)}
    - unless hide_stop_area_providers
      .form-group.togglable class=filter_item_class(params[:q], :stop_area_providers_id_eq)
        = f.label StopAreaProvider.ts, required: false, class: 'control-label'
        = f.input :stop_area_providers_id_eq, placeholder: StopAreaProvider.ts, label: false, as: :autocomplete_stop_area_provider, autocomplete_url: autocomplete_stop_area_referential_stop_area_providers_path(@stop_area_referential, format: :json), load_url: stop_area_referential_stop_area_providers_path(@stop_area_referential), required: false, wrapper_html: {class: "checkbox_list"}

    .form-group.togglable class=filter_item_class(params[:q], :area_type_eq_any)
      = f.label Chouette::StopArea.tmf('area_type'), required: false, class: 'control-label'
      = f.input :area_type_eq_any, checked: params[:q] && params[:q][:area_type_eq_any], collection: Chouette::AreaType.options, as: :check_boxes, label: false, label_method: lambda{|w| ("<span>" + w[0] + "</span>").html_safe}, required: false, wrapper_html: { class: 'checkbox_list' }

    .form-group.togglable class=filter_item_class(params[:q], :by_status)
      = f.label Chouette::StopArea.tmf('status'), required: false, class: 'control-label'
      = f.input :by_status, checked: params[:q] && params[:q][:by_status], collection: [:in_creation, :confirmed, :deactivated], as: :check_boxes, label: false, label_method: lambda{|w| ("<span>" + stop_area_status(w) + "</span>").html_safe}, required: false, wrapper_html: { class: 'checkbox_list' }

  .actions
    = link_to t('actions.erase'), @workbench, class: 'btn btn-link'
    = f.submit t('actions.filter'), class: 'btn btn-default'
