- breadcrumb :merge, @merge
- page_header_content_for @merge

ruby:
 controls = @workbench.workgroup.before_merge_compliance_control_sets.map do |key, label|
   TableBuilderHelper::Column.new(
     name: label,
     attribute: lambda do |item|
       ccs = @merge.compliance_check_set(key, item)
       ccs ? operation_status(ccs.status, verbose: true) : '-'
     end,
     sortable: false,
     link_to: lambda do |item|
       ccs = @merge.compliance_check_set(key, item)
       ccs && [@merge.workbench, ccs]
    end
    )
  end

ruby:
 after_controls = @workbench.workgroup.after_merge_compliance_control_sets.map do |key, label|
   TableBuilderHelper::Column.new(
     name: label,
     attribute: lambda do |item|
       ccs = @merge.compliance_check_set(key)
       ccs ? operation_status(ccs.status, verbose: true) : '-'
     end,
     sortable: false,
     link_to: lambda do |item|
       ccs = @merge.compliance_check_set(key)
       ccs && [@merge.workbench, ccs]
    end
    )
  end

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'), merge_metadatas(@merge)

    .row
      .col-lg-12
        = table_builder_2 @merge.referentials,
          [ \
            TableBuilderHelper::Column.new( \
              name: Referential.ts.capitalize, \
              sortable: false, \
              attribute: lambda do |item| \
                link_to(decorate_referential_name(item), referential_path(item)) \
              end \
            ), *controls \
          ], cls: 'table'

      - if @merge.new
        .col-lg-12
          = table_builder_2 Referential.where(id: @merge.new),
            [ \
              TableBuilderHelper::Column.new( \
                name: @merge.class.tmf(:new), \
                attribute: lambda do |item| \
                  link_to(decorate_referential_name(item), referential_path(item)) \
                end, \
                sortable: false \
              ), *after_controls \
            ], cls: 'table'
